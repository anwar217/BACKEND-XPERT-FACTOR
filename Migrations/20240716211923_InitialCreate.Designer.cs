// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using factoring1.FrameworkEtDrivers;

#nullable disable

namespace factoring1.Migrations
{
    [DbContext(typeof(FactoringDbContext))]
    [Migration("20240716211923_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("factoring1.Models.Bordereau", b =>
                {
                    b.Property<int>("BordereauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BordereauId"));

                    b.Property<int>("AnneeBordereau")
                        .HasColumnType("int");

                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBordereau")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NombreDocuments")
                        .HasColumnType("int");

                    b.HasKey("BordereauId");

                    b.HasIndex("ContratId");

                    b.ToTable("Bordereaux");
                });

            modelBuilder.Entity("factoring1.Models.Contrat", b =>
                {
                    b.Property<int>("ContratId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContratId"));

                    b.Property<decimal>("MontantContrat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ReferenceContrat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ContratId");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("factoring1.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FactureId"));

                    b.Property<int>("BordereauId")
                        .HasColumnType("int");

                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Echeance")
                        .HasColumnType("int");

                    b.Property<int>("IndividuId")
                        .HasColumnType("int");

                    b.Property<string>("ModeReglement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("MontantDocument")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RefFacture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("FactureId");

                    b.HasIndex("BordereauId");

                    b.HasIndex("ContratId");

                    b.HasIndex("IndividuId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("factoring1.Models.Individu", b =>
                {
                    b.Property<int>("IndividuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IndividuId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IndividuId");

                    b.ToTable("Individus");
                });

            modelBuilder.Entity("factoring1.Models.IndividuContrat", b =>
                {
                    b.Property<int>("IndividuId")
                        .HasColumnType("int");

                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IndividuId", "ContratId");

                    b.HasIndex("ContratId");

                    b.ToTable("IndividuContrats");
                });

            modelBuilder.Entity("factoring1.Models.Bordereau", b =>
                {
                    b.HasOne("factoring1.Models.Contrat", "Contrat")
                        .WithMany("Bordereaux")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("factoring1.Models.Facture", b =>
                {
                    b.HasOne("factoring1.Models.Bordereau", "Bordereau")
                        .WithMany("Factures")
                        .HasForeignKey("BordereauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("factoring1.Models.Contrat", "Contrat")
                        .WithMany("Factures")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("factoring1.Models.Individu", "Individu")
                        .WithMany("Factures")
                        .HasForeignKey("IndividuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bordereau");

                    b.Navigation("Contrat");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("factoring1.Models.IndividuContrat", b =>
                {
                    b.HasOne("factoring1.Models.Contrat", "Contrat")
                        .WithMany("IndividuContrats")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("factoring1.Models.Individu", "Individu")
                        .WithMany("IndividuContrats")
                        .HasForeignKey("IndividuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("factoring1.Models.Bordereau", b =>
                {
                    b.Navigation("Factures");
                });

            modelBuilder.Entity("factoring1.Models.Contrat", b =>
                {
                    b.Navigation("Bordereaux");

                    b.Navigation("Factures");

                    b.Navigation("IndividuContrats");
                });

            modelBuilder.Entity("factoring1.Models.Individu", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("IndividuContrats");
                });
#pragma warning restore 612, 618
        }
    }
}
